[{"C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\index.js":"1","C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\App.js":"2","C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\components\\Header.js":"3","C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\components\\Find.js":"4","C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\components\\Loading.js":"5","C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\components\\Results.js":"6","C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\pages\\Analysis.js":"7","C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\pages\\Main.js":"8"},{"size":151,"mtime":1608867813662,"results":"9","hashOfConfig":"10"},{"size":429,"mtime":1609017893350,"results":"11","hashOfConfig":"10"},{"size":1887,"mtime":1609219861283,"results":"12","hashOfConfig":"10"},{"size":4246,"mtime":1609264104616,"results":"13","hashOfConfig":"10"},{"size":380,"mtime":1609219561305,"results":"14","hashOfConfig":"10"},{"size":2052,"mtime":1609129613413,"results":"15","hashOfConfig":"10"},{"size":3125,"mtime":1609109123042,"results":"16","hashOfConfig":"10"},{"size":247,"mtime":1609003850757,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"oz9kio",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\index.js",[],["37","38"],"C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\App.js",[],"C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\components\\Header.js",["39","40"],"import React, { useState } from \"react\"\r\n\r\nvar tickerInput = \"\"\r\nvar indexDropdown = \"NYSE\"\r\n\r\nfunction useForceUpdate()\r\n{\r\n    const [value, setValue] = useState(0)\r\n    return () => setValue(value => ++value)\r\n}\r\n\r\nfunction handleSearchbarChange (forceUpdate)\r\n{\r\n  tickerInput = document.getElementById (\"ticker_input\").value\r\n  forceUpdate ()\r\n}\r\n\r\nfunction handleDropdownChange (forceUpdate)\r\n{\r\n  indexDropdown = document.getElementById (\"index_dropdown\").value\r\n  forceUpdate ()\r\n}\r\n\r\nfunction Header ()\r\n{\r\n  const forceUpdate = useForceUpdate ()\r\n  const header = {\r\n    display: \"inline-block\",\r\n    width: \"100%\",\r\n    height: \"5%\",\r\n    backgroundColor: \"#161a25\",\r\n    borderBottom: \"2px groove #506aef\"\r\n  };\r\n\r\n  const search = {\r\n    float: \"middle\",\r\n    marginRight: \"210px\",\r\n    marginTop: \"1%\"\r\n  };\r\n\r\n  const header_logo = {\r\n    color: \"white\",\r\n    width: \"400px\",\r\n    marginLeft: \"20px\",\r\n    float: \"left\"\r\n  };\r\n\r\n  const option_text = {\r\n    color: \"black\"\r\n  };\r\n\r\n  return (\r\n    <div style={header}>\r\n      <a href=\"/\"><img src=\"https://i.ibb.co/f9L2nNf/Darkmode.png\" style={header_logo} /></a>\r\n\r\n      <div style={search}>\r\n        <input class=\"searchbar\" type=\"text\" placeholder=\"Ticker\" id=\"ticker_input\" onChange={() => handleSearchbarChange (forceUpdate)} />\r\n        <select class=\"dropdown\" id=\"index_dropdown\" onChange={() => handleDropdownChange (forceUpdate)} >\r\n          <option value=\"NYSE\" style={option_text}>NYSE</option>\r\n          <option value=\"NASDAQ\" style={option_text}>NASDAQ</option>\r\n          <option value=\"TSX\" style={option_text}>TSX</option>\r\n          <option value=\"TSXV\" style={option_text}>TSXV</option>\r\n        </select>\r\n        <a href={\"/analysis/\"+ indexDropdown + '/' + tickerInput} class=\"button\" type=\"button\" style={{padding: \"7px 20px\"}}>Go</a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\components\\Find.js",["41","42","43","44","45","46","47","48","49"],"C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\components\\Loading.js",[],"C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\components\\Results.js",[],"C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\pages\\Analysis.js",["50","51"],"import React, { useState } from \"react\"\r\n\r\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\"\r\nimport { Chart } from \"react-google-charts\"\r\nimport axios from \"axios\"\r\n\r\nimport Header from \"../components/Header\"\r\nimport Loading from \"../components/Loading\"\r\n\r\nvar bulls = 0\r\nvar neutrals = 0\r\nvar bears = 0\r\nvar subjectivity = 1\r\n\r\nvar firstRun = true\r\nvar loaded = false\r\n\r\nfunction getSentiment (ticker, index, forceUpdate)\r\n{\r\n  axios.get (\"https://praetorian-trader-stats-api.herokuapp.com/?ticker=\"+ ticker + \"&index=\" + index.toLowerCase ())\r\n  .then (response => {\r\n    bulls = response[\"data\"][\"Sentiment\"][\"Polarity\"][0]\r\n    neutrals = response[\"data\"][\"Sentiment\"][\"Polarity\"][1]\r\n    bears = response[\"data\"][\"Sentiment\"][\"Polarity\"][2]\r\n    subjectivity = response[\"data\"][\"Sentiment\"][\"Subjectivity\"]\r\n    loaded = true\r\n\r\n    forceUpdate ()\r\n  }).catch (error => {\r\n    console.log (error)\r\n  })\r\n\r\n  firstRun = false\r\n}\r\n\r\nfunction useForceUpdate()\r\n{\r\n    const [value, setValue] = useState(0)\r\n    return () => setValue(value => ++value)\r\n}\r\n\r\nfunction Analysis (props)\r\n{\r\n  const forceUpdate = useForceUpdate ()\r\n\r\n  var fullTicker = String (props.match.params.ticker)\r\n  var ticker = fullTicker\r\n  if (ticker.includes (\".TO\"))\r\n  {\r\n    ticker = ticker.split (\".TO\")[0]\r\n  }\r\n  else if (ticker.includes (\".V\"))\r\n  {\r\n    ticker = ticker.split (\".V\")[0]\r\n  }\r\n\r\n  var index = String (props.match.params.index)\r\n  const symbol = index.toUpperCase () + ':' + ticker\r\n\r\n  var polarities = [\r\n    [\"Opinion\", \"Number of Occurences\"],\r\n    [\"Bullish\", bulls],\r\n    [\"Neutral\", neutrals],\r\n    [\"Bearish\", bears]\r\n  ];\r\n\r\n  var subjectivities = [\r\n    [\"Driving Force\", \"%\"],\r\n    [\"Emotional\", subjectivity],\r\n    [\"Logical\", 1 - subjectivity]\r\n  ];\r\n\r\n  const options1 = {\r\n    pieHole: 0.4,\r\n    is3D: false,\r\n    colors: [\"#26a69a\", \"#efed50\", \"#ef5350\"],\r\n    backgroundColor: \"none\",\r\n    legend: \"none\"\r\n  };\r\n\r\n  const options2 = {\r\n    pieHole: 0.4,\r\n    is3D: false,\r\n    colors: [\"#ef5350\", \"26a69a\"],\r\n    backgroundColor: \"none\",\r\n    legend: \"none\",\r\n    width: \"0px\"\r\n  };\r\n\r\n  if (firstRun == true)\r\n  {\r\n    getSentiment (ticker, index, forceUpdate)\r\n  }\r\n  return (\r\n    <div class=\"body\">\r\n      <Header />\r\n      <TradingViewWidget\r\n        symbol={symbol}\r\n        theme={Themes.DARK}\r\n        locale=\"en\"\r\n        width=\"100%\"\r\n        height=\"400px\"\r\n      />\r\n      <div class=\"sentiment\">\r\n        <h1 style={{color: \"white\"}}>Market Sentiment</h1>\r\n\r\n        <h2 style={{color: \"white\"}}>Investor Perspectives</h2>\r\n        {loaded ? null : <Loading />}\r\n        <Chart\r\n          chartType=\"PieChart\"\r\n          width=\"100%\"\r\n          height=\"400px\"\r\n          data={polarities}\r\n          options={options1}\r\n        />\r\n\r\n        <h2 style={{color: \"white\"}}>Perspective Driving Force</h2>\r\n        {loaded ? null : <Loading />}\r\n        <Chart\r\n          chartType=\"PieChart\"\r\n          width=\"100%\"\r\n          height=\"400px\"\r\n          data={subjectivities}\r\n          options={options2}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Analysis\r\n","C:\\Users\\Jaden\\Desktop\\Coding\\Praetorian Trader\\frontend\\src\\pages\\Main.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":8,"column":12,"nodeType":"58","messageId":"59","endLine":8,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":54,"column":19,"nodeType":"62","endLine":54,"endColumn":90},{"ruleId":"63","severity":1,"message":"64","line":23,"column":19,"nodeType":"65","messageId":"66","endLine":23,"endColumn":21},{"ruleId":"63","severity":1,"message":"64","line":28,"column":19,"nodeType":"65","messageId":"66","endLine":28,"endColumn":21},{"ruleId":"56","severity":1,"message":"57","line":63,"column":12,"nodeType":"58","messageId":"59","endLine":63,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":69,"column":23,"nodeType":"65","messageId":"66","endLine":69,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":74,"column":28,"nodeType":"65","messageId":"66","endLine":74,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":79,"column":28,"nodeType":"65","messageId":"66","endLine":79,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":84,"column":28,"nodeType":"65","messageId":"66","endLine":84,"endColumn":30},{"ruleId":"60","severity":1,"message":"61","line":141,"column":9,"nodeType":"62","endLine":141,"endColumn":104},{"ruleId":"60","severity":1,"message":"61","line":142,"column":9,"nodeType":"62","endLine":142,"endColumn":104},{"ruleId":"56","severity":1,"message":"57","line":38,"column":12,"nodeType":"58","messageId":"59","endLine":38,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":90,"column":16,"nodeType":"65","messageId":"66","endLine":90,"endColumn":18},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]